'use strict';

var baseIteratee = require('./_baseIteratee'),
    isArrayLike = require('./isArrayLike'),
    keys = require('./keys');

/**
 * Creates a `_.find` or `_.findLast` function.
 *
 * @private
 * @param {Function} findIndexFunc The function to find the collection index.
 * @returns {Function} Returns the new find function.
 */
function createFind(findIndexFunc) {
  return function (collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!isArrayLike(collection)) {
      var iteratee = baseIteratee(predicate, 3);
      collection = keys(collection);
      predicate = function predicate(key) {
        return iteratee(iterable[key], key, iterable);
      };
    }
    var index = findIndexFunc(collection, predicate, fromIndex);
    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
  };
}

module.exports = createFind;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3B1YmxpYy9saWIvbG9kYXNoL19jcmVhdGVGaW5kLmpzIl0sIm5hbWVzIjpbImJhc2VJdGVyYXRlZSIsInJlcXVpcmUiLCJpc0FycmF5TGlrZSIsImtleXMiLCJjcmVhdGVGaW5kIiwiZmluZEluZGV4RnVuYyIsImNvbGxlY3Rpb24iLCJwcmVkaWNhdGUiLCJmcm9tSW5kZXgiLCJpdGVyYWJsZSIsIk9iamVjdCIsIml0ZXJhdGVlIiwia2V5IiwiaW5kZXgiLCJ1bmRlZmluZWQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLGVBQWVDLFFBQVEsaUJBQVIsQ0FBbkI7QUFBQSxJQUNJQyxjQUFjRCxRQUFRLGVBQVIsQ0FEbEI7QUFBQSxJQUVJRSxPQUFPRixRQUFRLFFBQVIsQ0FGWDs7QUFJQTs7Ozs7OztBQU9BLFNBQVNHLFVBQVQsQ0FBb0JDLGFBQXBCLEVBQW1DO0FBQ2pDLFNBQU8sVUFBU0MsVUFBVCxFQUFxQkMsU0FBckIsRUFBZ0NDLFNBQWhDLEVBQTJDO0FBQ2hELFFBQUlDLFdBQVdDLE9BQU9KLFVBQVAsQ0FBZjtBQUNBLFFBQUksQ0FBQ0osWUFBWUksVUFBWixDQUFMLEVBQThCO0FBQzVCLFVBQUlLLFdBQVdYLGFBQWFPLFNBQWIsRUFBd0IsQ0FBeEIsQ0FBZjtBQUNBRCxtQkFBYUgsS0FBS0csVUFBTCxDQUFiO0FBQ0FDLGtCQUFZLG1CQUFTSyxHQUFULEVBQWM7QUFBRSxlQUFPRCxTQUFTRixTQUFTRyxHQUFULENBQVQsRUFBd0JBLEdBQXhCLEVBQTZCSCxRQUE3QixDQUFQO0FBQWdELE9BQTVFO0FBQ0Q7QUFDRCxRQUFJSSxRQUFRUixjQUFjQyxVQUFkLEVBQTBCQyxTQUExQixFQUFxQ0MsU0FBckMsQ0FBWjtBQUNBLFdBQU9LLFFBQVEsQ0FBQyxDQUFULEdBQWFKLFNBQVNFLFdBQVdMLFdBQVdPLEtBQVgsQ0FBWCxHQUErQkEsS0FBeEMsQ0FBYixHQUE4REMsU0FBckU7QUFDRCxHQVREO0FBVUQ7O0FBRURDLE9BQU9DLE9BQVAsR0FBaUJaLFVBQWpCIiwiZmlsZSI6Il9jcmVhdGVGaW5kLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2VJdGVyYXRlZSA9IHJlcXVpcmUoJy4vX2Jhc2VJdGVyYXRlZScpLFxuICAgIGlzQXJyYXlMaWtlID0gcmVxdWlyZSgnLi9pc0FycmF5TGlrZScpLFxuICAgIGtleXMgPSByZXF1aXJlKCcuL2tleXMnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgYF8uZmluZGAgb3IgYF8uZmluZExhc3RgIGZ1bmN0aW9uLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmaW5kSW5kZXhGdW5jIFRoZSBmdW5jdGlvbiB0byBmaW5kIHRoZSBjb2xsZWN0aW9uIGluZGV4LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgZmluZCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlRmluZChmaW5kSW5kZXhGdW5jKSB7XG4gIHJldHVybiBmdW5jdGlvbihjb2xsZWN0aW9uLCBwcmVkaWNhdGUsIGZyb21JbmRleCkge1xuICAgIHZhciBpdGVyYWJsZSA9IE9iamVjdChjb2xsZWN0aW9uKTtcbiAgICBpZiAoIWlzQXJyYXlMaWtlKGNvbGxlY3Rpb24pKSB7XG4gICAgICB2YXIgaXRlcmF0ZWUgPSBiYXNlSXRlcmF0ZWUocHJlZGljYXRlLCAzKTtcbiAgICAgIGNvbGxlY3Rpb24gPSBrZXlzKGNvbGxlY3Rpb24pO1xuICAgICAgcHJlZGljYXRlID0gZnVuY3Rpb24oa2V5KSB7IHJldHVybiBpdGVyYXRlZShpdGVyYWJsZVtrZXldLCBrZXksIGl0ZXJhYmxlKTsgfTtcbiAgICB9XG4gICAgdmFyIGluZGV4ID0gZmluZEluZGV4RnVuYyhjb2xsZWN0aW9uLCBwcmVkaWNhdGUsIGZyb21JbmRleCk7XG4gICAgcmV0dXJuIGluZGV4ID4gLTEgPyBpdGVyYWJsZVtpdGVyYXRlZSA/IGNvbGxlY3Rpb25baW5kZXhdIDogaW5kZXhdIDogdW5kZWZpbmVkO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZUZpbmQ7XG4iXX0=